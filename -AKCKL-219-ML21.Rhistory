timing <- data.frame()
n.pac.warming.timing <- as.data.frame(n.pac.warming.timing)
for(j in 2:ncol(n.pac.warming.timing)){
# j <- 2
temp <- NA
for(i in 1:length(levels)){
# i <- 1
temp[i] <- min(n.pac.warming.timing$year[n.pac.warming.timing[,j] >= levels[i]])
}
timing <- rbind(timing,
data.frame(
model = colnames(n.pac.warming.timing[j]),
level = levels,
year = temp))
}
# and plot
ggplot(timing, aes(year)) +
geom_histogram(bins = 6) +
facet_wrap(~level, scales = "free_x")
timing
# and plot
ggplot(timing, aes(year)) +
geom_histogram(bins = 6) +
facet_wrap(~level, scales = "free_x")
ggplot(timing, aes(level, year, color = model)) +
geom_point() +
labs(x = "N. Pacific warming wrt 1850-1949 (°C)",
y = "Year first reached") +
scale_y_continuous(breaks = seq(1960, 2090, by = 10))
ggsave("./CMIP6/figs/N_Pac_warming_rate_by_model.png", width = 6, height = 4, units = 'in')
timing$level <- as.factor(timing$level)
obs.timing <- data.frame()
# fit loess to ersst to get observed warming rate
mod <- loess(n.pac.obs.warming[,2] ~ n.pac.obs.warming[,1])
n.pac.obs.warming$trend <- predict(mod)
# plot to check
ggplot(n.pac.obs.warming, aes(year, trend)) +
geom_line()
n.pac.obs.warming
i <- 1
levels[i]
temp <- min(n.pac.obs.warming$year[n.pac.obs.warming$trend >= levels[i]])
temp
obs.timing <- data.frame(level = levels,
timing = c(2003, NA, NA, NA))
obs.timing$level <- as.factor(obs.timing$level)
ggplot(timing, aes(y = year, level)) +
geom_boxplot() +
labs(x = "N Pacific warming wrt 1850-1949 (°C)",
y = "Year first reached",
title = "Red dot = ERSSTv5 warming") +
geom_point(data = obs.timing, aes(y = timing, as.factor(level)), color = "red")
ggsave("./CMIP6/figs/ne_pacific_warming_rate_models_obs.png", width = 5, height = 4, units = 'in')
# save timing
write.csv(timing, "./CMIP6/summaries/model.north.pacific.warming.timing.csv")
# reload unsmoothed warming data
model.warming.rate <- read.csv("./CMIP6/summaries/ne_pacific_annual_modeled_sst.csv", row.names = 1)
obs.warming.rate <- read.csv("./CMIP6/summaries/ne_pacific_annual_observed_sst.csv", row.names = 1)
predict.timing <- model.warming.rate %>%
filter(year %in% 1973:2022)
response.timing <- obs.warming.rate %>%
filter(year %in% 1973:2022) %>%
rename(ersst = ersst.warming)
predict.timing <- left_join(predict.timing, response.timing)
# plot to check
ggplot(predict.timing, aes(value, ersst)) +
geom_point() +
facet_wrap(~name) # avoids a 'fishook' around declining rate of 1950s
model.warming.evaluation <- data.frame()
models <- unique(predict.timing$name)
model.warming.evaluation <- data.frame()
models <- unique(predict.timing$name)
for(i in 1:length(models)){
# i <- 1
temp <- predict.timing %>%
filter(name == models[i])
linear.fit <- lm(ersst ~ value, data = temp)
RSS <- c(crossprod(linear.fit$residuals))
Pearson.resid <- RSS / linear.fit$df.residual
model.warming.evaluation <- rbind(model.warming.evaluation,
data.frame(model = models[i],
coeff = coefficients(linear.fit)[2],
Pearson.resid = Pearson.resid))
}
model.warming.evaluation # should use coefficients! (inverse of difference from 1)
model.warming.evaluation$coeff.from.one <- 1-model.warming.evaluation$coeff
model.warming.evaluation
sigma_d <- seq(0.2, 2.5, by = 0.005)
length(sigma_d)
416*23
sigma_s_d_tuning <- read.csv("./CMIP6/summaries/tuning_results_sigma_perfect_model.csv")
View(sigma_s_d_tuning)
## estimate projected warming rate for the N. Pacific from CMIP6
## weighting models by their performance wrt 1973-2022 observed warming rate
library(tidyverse)
library(rstan)
library(brms)
library(bayesplot)
library(bayesdfa)
source("./CMIP6/scripts/stan_utils.R")
theme_set(theme_bw())
## load model warming wrt 1850-1949 from historical/ssp585 runs --------
model.warming.rate <- read.csv("./CMIP6/summaries/ne_pacific_annual_modeled_sst.csv", row.names = 1)
# load model weights
model.weights <- read.csv("./CMIP6/summaries/N_Pac_warming_model_weights.csv")
# wrangle data
# simplify weights
weights <- model.weights  %>%
mutate(model_fac = as.factor(prediction_model)) %>%
rename(weight = normalized_weight) %>%
select(model_fac, weight)
dat <- model.warming.rate %>%
mutate(model_fac = as.factor(name)) %>%
select(-name) %>%
rename(warming = value)
levels(weights$model_fac); levels(dat$model_fac)
dat <- left_join(dat, weights)
# check for NA
sum(is.na(dat))
## run brms ---------------------------------
warming_formula <-  bf(warming | weights(weight) ~ s(year) + (1 | model_fac))
## Show default priors
get_prior(warming_formula, dat)
warming_brm <- brm(warming_formula,
data = dat,
cores = 4, chains = 4, iter = 5000,
save_pars = save_pars(all = TRUE),
control = list(adapt_delta = 0.99, max_treedepth = 16))
saveRDS(warming_brm, file = "./CMIP6/brms_output/warming_brm.rds")
check_hmc_diagnostics(warming_brm$fit)
neff_lowest(warming_brm$fit) # ??
rhat_highest(warming_brm$fit)
bayes_R2(warming_brm)
## SST anomaly predictions #### 95% CI
ce1s_1 <- conditional_effects(warming_brm, effect = "year", re_formula = NA,
probs = c(0.025, 0.975))
dat_ce <- ce1s_1$year %>%
select(year, estimate__, lower__, upper__) %>%
mutate(Source = "Modeled warming")
# add observations
ersst <- read.csv("./CMIP6/summaries/North_Pacific_ersst_1854-2022.csv")
ersst$warming.wrt.1854.1949 <- ersst$annual.unsmoothed - mean(ersst$annual.unsmoothed[ersst$year %in% 1854:1949])
obs <- ersst %>%
select(year, warming.wrt.1854.1949) %>%
rename(estimate__ = warming.wrt.1854.1949) %>%
mutate(Source = "Actual temperature",
lower__ = NA,
upper__ = NA)
dat_ce <- rbind(dat_ce, obs)
dat_ce$order <- if_else(dat_ce$Source == "Actual temperature", 2, 1)
dat_ce$Source <- reorder(dat_ce$Source, dat_ce$order)
cb <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggplot(dat_ce) +
aes(x = year, y = estimate__, color = Source, fill = Source) +
geom_line() +
geom_ribbon(
aes(x = year, ymin = lower__, ymax = upper__, fill = Source), alpha = 0.15, lty = 0) +
theme_bw() +
theme(axis.title = element_blank()) +
scale_color_manual(values = cb[c(2,4)]) +
scale_fill_manual(values = cb[c(2,4)])
ggsave("./CMIP6/figs/modeled_observed_warming.png", width = 5, height = 3)
# get predicted warming for each year
new.dat <- data.frame(year = 1940:2100,
model = NA)
pred <- posterior_epred(warming_brm, newdata = new.dat, re_formula = NA)
new.dat$pred_mean <- colMeans(pred)
new.dat$lower = apply(pred, 2, quantile, probs = 0.025)
new.dat$upper = apply(pred, 2, quantile, probs = 0.975)
ggplot(new.dat, aes(year, pred_mean)) +
geom_line()
View(new.dat)
# save
write.csv(new.dat, "./CMIP6/summaries/brms_predicted_North_Pac_warming.csv", row.names = F)
inverse_formula <-  bf(year | weights(weight) ~ s(warming) + (1 | model_fac))
## Show default priors
get_prior(inverse_formula, dat)
inverse_warming_brm <- brm(inverse_formula,
data = dat,
cores = 4, chains = 4, iter = 5000,
save_pars = save_pars(all = TRUE),
control = list(adapt_delta = 0.99, max_treedepth = 16))
=mean(86,94.7)
mean(86,94.7)
mean(c(86,94.7))
library(tidyverse)
# set theme
theme_set(theme_bw())
# custom colorblind colors
cb <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
## load differences, similarities, and shape variables and calculate weight-----------------------
diff <- read.csv("./CMIP6/summaries/CMIP6_time_series_differences.csv")
sim <- read.csv("./CMIP6/summaries/CMIP6_time_series_model_similarities.csv")
shape <- read.csv("./CMIP6/summaries/model_weighting_sigma.csv")
# object to catch results
CMIP6_weights <- data.frame()
regions <- unique(diff$region)
# set sigma_s = 0.4
sigma_s = 0.4
for(r in 1:length(regions)){
# r <- 1
diff_temp <- diff %>%
filter(region == regions[r])
shape_temp <- shape %>%
filter(region == regions[r])
# scale differences for this region by the median and get mean difference (D)
diff_temp <- diff_temp %>%
mutate(diff1 = climatology_diff/median(climatology_diff),
diff2 = sd_diff/median(sd_diff),
diff3 = ar_diff/median(ar_diff),
diff4 = trend_diff/median(trend_diff))
diff_temp$D = apply(diff_temp[,7:10], 1, mean)
# loop through each model and calculate similarity to other models
models <- diff_temp$model
for(m in 1:length(models)){
# m <- 1
sim_temp <- sim %>%
filter(region == regions[r],
model == models[m]) %>%
mutate(sim1 = climatology_diff / median(climatology_diff),
sim2 = sd_diff / median(sd_diff),
sim3 = ar_diff / median(ar_diff),
sim4 = trend_diff / median(trend_diff))
sim_temp$S = apply(sim_temp[,8:11], 1, mean)
# get independence weight
independence_weight = 1/(1+sum(exp(-(sim_temp$S^2/sigma_s^2))))
# # check calculation above
# check <- NA
#
# for(i in 1:nrow(sim_temp)){
# check[i] <- exp(-(sim_temp$S[i]^2/sigma_s^2))
# }
#
# check_independence <- 1/(1+sum(check))
# check_independence # correct!
# save results
CMIP6_weights <- rbind(CMIP6_weights,
data.frame(region = regions[r],
model = models[m],
skill_weight = exp(-(diff_temp$D[diff_temp$model== models[m]]^2/shape_temp$sigma_d^2)),
independence_weight = independence_weight))
}
}
# get combined weight
CMIP6_weights <- CMIP6_weights %>%
mutate(combined_weight = skill_weight*independence_skill)
# get combined weight
CMIP6_weights <- CMIP6_weights %>%
mutate(combined_weight = skill_weight*independence_weight)
# plot non-normalized
plot_CMIP6_weights <- CMIP6_weights %>%
arrange(region, desc(combined_weight)) %>%
mutate(model_number = rep(1:23, length.out = 6*23)) %>%
pivot_longer(cols = c(-region, -model, -model_number))
# clean up and order region names
clean_names <- data.frame(region = unique(plot_CMIP6_weights$region),
plot_region = as.factor(c("British Columbia Coast",
"Eastern Bering Sea",
"Gulf of Alaska",
"North Pacific",
"Northern California Current",
"Southern California Current")),
plot_order = c(4,2,3,1,5,6))
plot_CMIP6_weights <- left_join(plot_CMIP6_weights, clean_names) %>%
mutate(plot_region = reorder(plot_region, plot_order)) %>%
mutate(weight_order = case_when(name == "skill_weight" ~ 1,
name == "independence_weight" ~ 2,
name == "combined_weight" ~3),
name = reorder(name, weight_order))
ggplot(plot_CMIP6_weights, aes(model_number, value, color = name)) +
geom_point() +
geom_line() +
facet_wrap(~plot_region, scales = "free_y") +
scale_color_manual(values = cb[c(6,4,2)], labels = c("Skill weight", "Independence weight", "Combined weight")) +
labs(x = "Model number",
y = "Value") +
theme(legend.title = element_blank())
# plot non-normalized
plot_CMIP6_weights <- CMIP6_weights %>%
arrange(region, desc(skill_weight)) %>%
mutate(model_number = rep(1:23, length.out = 6*23)) %>%
pivot_longer(cols = c(-region, -model, -model_number))
# clean up and order region names
clean_names <- data.frame(region = unique(plot_CMIP6_weights$region),
plot_region = as.factor(c("British Columbia Coast",
"Eastern Bering Sea",
"Gulf of Alaska",
"North Pacific",
"Northern California Current",
"Southern California Current")),
plot_order = c(4,2,3,1,5,6))
plot_CMIP6_weights <- left_join(plot_CMIP6_weights, clean_names) %>%
mutate(plot_region = reorder(plot_region, plot_order)) %>%
mutate(weight_order = case_when(name == "skill_weight" ~ 1,
name == "independence_weight" ~ 2,
name == "combined_weight" ~3),
name = reorder(name, weight_order))
ggplot(plot_CMIP6_weights, aes(model_number, value, color = name)) +
geom_point() +
geom_line() +
facet_wrap(~plot_region, scales = "free_y") +
scale_color_manual(values = cb[c(6,4,2)], labels = c("Skill weight", "Independence weight", "Combined weight")) +
labs(x = "Model number",
y = "Value") +
theme(legend.title = element_blank())
# plot non-normalized
plot_CMIP6_weights <- CMIP6_weights %>%
arrange(region, desc(combined_weight)) %>%
mutate(model_number = rep(1:23, length.out = 6*23)) %>%
pivot_longer(cols = c(-region, -model, -model_number))
# clean up and order region names
clean_names <- data.frame(region = unique(plot_CMIP6_weights$region),
plot_region = as.factor(c("British Columbia Coast",
"Eastern Bering Sea",
"Gulf of Alaska",
"North Pacific",
"Northern California Current",
"Southern California Current")),
plot_order = c(4,2,3,1,5,6))
plot_CMIP6_weights <- left_join(plot_CMIP6_weights, clean_names) %>%
mutate(plot_region = reorder(plot_region, plot_order)) %>%
mutate(weight_order = case_when(name == "skill_weight" ~ 1,
name == "independence_weight" ~ 2,
name == "combined_weight" ~3),
name = reorder(name, weight_order))
ggplot(plot_CMIP6_weights, aes(model_number, value, color = name)) +
geom_point() +
geom_line() +
facet_wrap(~plot_region, scales = "free_y") +
scale_color_manual(values = cb[c(6,4,2)], labels = c("Skill weight", "Independence weight", "Combined weight")) +
labs(x = "Model number",
y = "Value") +
theme(legend.title = element_blank())
CMIP6_normalized_weights <- CMIP6_normalized_weights %>%
arrange(region, desc(combined_weight)) %>%
mutate(model_number = rep(1:23, length.out = 6*23))
ggsave("./CMIP6/figs/combined_weights_one_panel_per_region.png", width = 10, height = 5, units = 'in')
## plot normalized combined weight
CMIP6_normalized_weights <- data.frame()
# now normalize so that average weight = 1 in each region
for(r in 1:length(regions)){
# r <- 1
temp_weight <- CMIP6_weights %>%
filter(region == regions[r])
CMIP6_normalized_weights <- rbind(CMIP6_normalized_weights,
data.frame(region = regions[r],
model = temp_weight$model,
combined_weight = temp_weight$combined_weight/mean(temp_weight$combined_weight)))
}
CMIP6_normalized_weights <- CMIP6_normalized_weights %>%
arrange(region, desc(combined_weight)) %>%
mutate(model_number = rep(1:23, length.out = 6*23))
CMIP6_normalized_weights
## plot normalized combined weight
CMIP6_normalized_weights <- data.frame()
# now normalize so that average weight = 1 in each region
for(r in 1:length(regions)){
# r <- 1
temp_weight <- CMIP6_weights %>%
filter(region == regions[r])
CMIP6_normalized_weights <- rbind(CMIP6_normalized_weights,
data.frame(region = regions[r],
model = temp_weight$model,
combined_weight = temp_weight$combined_weight/mean(temp_weight$combined_weight)))
}
CMIP6_normalized_weights <- CMIP6_normalized_weights %>%
arrange(region, desc(combined_weight)) %>%
mutate(model_number = rep(1:23, length.out = 6*23))
# clean up and order names
CMIP6_normalized_weights <- left_join(CMIP6_normalized_weights, clean_names) %>%
mutate(plot_region = reorder(plot_region, plot_order))
ggplot(CMIP6_normalized_weights, aes(model_number, combined_weight)) +
geom_point() +
geom_line() +
geom_hline(yintercept = 1, lty = 2) +
facet_wrap(~plot_region) +
labs(x = "Model number",
y = "Model weight")
ggsave("./CMIP6/figs/total_normalized_weight_one_panel_per_region.png", width = 10, height = 5, units = 'in')
ggplot(CMIP6_normalized_weights, aes(combined_weight)) +
geom_histogram(bins = 15, fill = "grey", color = "black") +
facet_wrap(~plot_region)
## plot sst time series relative to observations, color coding for model weight
cmip <- read.csv("./CMIP6/summaries/CMIP6.sst.time.series.csv") %>%
filter(experiment == "hist_ssp585") %>%
select(region, model, year, annual.unsmoothed) %>%
rename(annual.sst = annual.unsmoothed)
cmip
ersst <- read.csv("./CMIP6/summaries/regional_north_pacific_ersst_time_series.csv") %>%
select(region, year, annual.unsmoothed) %>%
rename(annual.sst = annual.unsmoothed)
# data to plot
plot <- cmip %>%
rename(model_sst = annual.sst) %>%
left_join(.,ersst) %>%
rename(observed_sst = annual.sst)
# add model weights
plot_weights <- CMIP6_normalized_weights %>%
select(-model_number) %>%
mutate(proportional_weight = case_when(combined_weight >= 2 ~ "> 2",
combined_weight >= 1.5 & combined_weight < 2 ~ "1.5 - 2",
combined_weight >= 1.25 & combined_weight < 1.5 ~ "1.25 - 1.5",
combined_weight >= 0.75 & combined_weight < 1.25 ~ "0.75 - 1.25",
combined_weight >= 0.5 & combined_weight < 0.75 ~ "0.5 - 0.75",
combined_weight < 0.5 ~ "< 0.5"
),
weight_order = case_when(proportional_weight == "> 2" ~ 6,
proportional_weight == "1.5 - 2" ~ 5,
proportional_weight == "1.25 - 1.5" ~ 4,
proportional_weight == "0.75 - 1.25" ~ 3,
proportional_weight == "0.5 - 0.75" ~ 2,
proportional_weight == "< 0.5" ~ 1),
proportional_weight = reorder(proportional_weight, weight_order)) %>%
ungroup()
plot <- left_join(plot, plot_weights)
plot <- left_join(plot, clean_names)
# set colors
library(RColorBrewer)
display.brewer.pal(n = 9, "YlOrRd")
display.brewer.pal(n = 9, "Greys")
my.col1 <- brewer.pal(n = 9, "YlOrRd")
my.col2 <- brewer.pal(n = 9, "Greys")
my.col <- c(my.col2[c(3,5)], my.col1[c(3,5,7,9)])
ggplot(plot, aes(year, model_sst, group = interaction(model, proportional_weight), color = proportional_weight)) +
geom_line(size = 0.3, alpha = 0.5) +
facet_wrap(~plot_region, scales = "free_y") +
scale_color_discrete(type = my.col) +
guides(color = guide_legend(override.aes = list(size = 2))) +
geom_line(aes(year, observed_sst), color = "black", size = 0.4) +
theme(axis.title.x = element_blank()) +
labs(y = "SST (°C)",
color = "Model weight")
library(tidyverse)
library(ncdf4)
library(zoo)
library(maps)
library(mapdata)
library(chron)
library(fields)
library(oce)
# set palettes
new.col <- oceColorsPalette(64)
cb <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# set theme
theme_set(theme_bw())
# full North Pacific, 1854-2022
nc <- nc_open("./CMIP6/data/nceiErsstv5_89b2_444a_5b23.nc")
ncvar_get(nc, "time")   # seconds since 1-1-1970
raw <- ncvar_get(nc, "time")
h <- raw/(24*60*60)
d <- dates(h, origin = c(1,1,1970))
m <- months(d)
yr <- years(d)
x <- ncvar_get(nc, "longitude")
y <- ncvar_get(nc, "latitude")
y
SST <- ncvar_get(nc, "sst", verbose = F)
SST <- aperm(SST, 3:1)
SST <- matrix(SST, nrow=dim(SST)[1], ncol=prod(dim(SST)[2:3]))
# Keep track of corresponding latitudes and longitudes of each column:
lat <- rep(y, length(x))
lon <- rep(x, each = length(y))
dimnames(SST) <- list(as.character(d), paste("N", lat, "E", lon, sep=""))
temp.mean <- colMeans(SST, na.rm=T)
z <- t(matrix(temp.mean,length(y)))
image.plot(x,y,z, col=oceColorsPalette(64), xlab = "", ylab = "")
contour(x, y, z, add=T)
map('world2Hires',c('Canada', 'usa', 'USSR', 'Japan', 'Mexico', 'South Korea', 'North Korea', 'China', 'Mongolia'), fill=T,add=T, lwd=1, col="lightyellow3")
library(tidyverse)
library(ncdf4)
library(zoo)
library(maps)
library(mapdata)
library(chron)
library(fields)
library(oce)
# set palette
new.col <- oceColorsPalette(64)
# set theme
theme_set(theme_bw())
# load polygons for subsetting each model
regional.polygons <- read.csv("./CMIP6/summaries/regional_polygons.csv")
# get vector of regions for indexing
regions <- unique(regional.polygons$region)
# objects for saving dates and temps and file-experiment ID from each realization
dates <- temps  <- matrix()
experiment.file <- data.frame()
files.new <- list.files("./CMIP6/CMIP6_outputs/1850-2099_runs/ssp585")
length(files.new)
# make function to calculate cell weights
cell.weight <- function(x)  sqrt(cos(x*pi/180))
# and function to calculate weighted means with these weights
weighted.cell.mean <- function(x) weighted.mean(x, weights, na.rm = T)
# load vector of clean region names to match with ERSST summaries
region.names <- read.csv("./CMIP6/summaries/clean_region_names.csv")
# create blank df to hold time series of sst and anomalies wrt 1950-1999
CMIP6.sst.time.series <- CMIP6.anomaly.time.series <- data.frame()
i <- 1
path <- paste("./CMIP6/CMIP6_outputs/1850-2099_runs/ssp585/", files.new[i], sep="")
# load file
nc <- nc_open(path)
# get list of experiments
experiments <-  ncvar_get(nc, "experiment", verbose = F)
j <- 1
# extract dates
d <- dates(ncvar_get(nc, "time"), origin = c(1,1,1970))
m <- months(d)
yr <- years(d)
x <- ncvar_get(nc, "lon")
y <- ncvar_get(nc, "lat")
y
14.12-11.71
